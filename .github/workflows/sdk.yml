# Github workflow to build and test the Nexus SDK code

name: Nexus SDK
on:
  pull_request:
  push:
    branches:
      - main

# Fix for OOM.
env:
  CARGO_BUILD_JOBS: 1
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: >
    -C codegen-units=1

jobs:
  detect-changes:
    uses: ./.github/workflows/detect_changes.yml
    with:
      files: |
        sdk/**
  # 1. Install Rust
  # 2. Install Rust cache
  # 3. Install just
  # 4. Build, fmt, clippy and test the Nexus SDK
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.changed == 'true'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-docker-action@v4

      # 1.
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable, nightly-2025-01-06
          override: true
          components: rustfmt, clippy

      # 2.
      - name: Cache Build
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: sdk

      # 3.
      - uses: taiki-e/install-action@just

      # 4
      - run: cargo +stable --version
      - run: cargo +nightly-2025-01-06 --version
      - run: just sdk check
      - run: just sdk fmt-check
      - run: just sdk clippy
      - run: just sdk test
