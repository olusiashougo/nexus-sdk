[package]
name = "nexus-sdk"
description = "Nexus SDK provides a set of tools to interact with the Nexus Workflow."

edition.workspace = true
version.workspace = true
repository.workspace = true
homepage.workspace = true
license.workspace = true
readme.workspace = true
authors.workspace = true
keywords.workspace = true
categories.workspace = true

[features]
default = ["tool_fqn"]

# Tool FQN feature enables the use of the `ToolFqn` struct and `fqn!` macro.
# This feature is enabled by default.
tool_fqn = ["regex", "lazy-regex"]

# Crypto feature enables cryptographic primitives
crypto = [
    "aead", "serde-big-array", "chacha20poly1305", "hkdf", "rand", "rand_core",
    "sha2", "subtle", "x25519-dalek", "xeddsa", "zeroize", "thiserror", "hmac",
    "ciborium", "aes-gcm", "bincode", "serde_json", "aes-siv", "serde_bytes", "hex", "blake3", "lru"
]

# Secret core feature provides a generic secret type
secret_core = ["bincode", "base64", "rand", "thiserror", "chacha20poly1305", "zeroize"]

# Sui Types feature gives access to the re-exported Sui types.
sui_types = [
    "sui_sdk",
    "move_core_types",
    "sui_keys",
    "shared_crypto",
    "sui_config",
]

# Sui idents feature enables the use of the `idents` module and adds sui-sdk
# and move-core-types as dependencies.
sui_idents = ["tool_fqn", "sui_types", "serde_json"]

# Types feature enables the use of the `types` module. Also adds reqwest as a
# dependency.
types = ["sui_types", "reqwest"]

# Events feature enables the use of the `events` module.
events = ["sui_idents", "types"]

# Object crawler feature enables the use of the `object_crawler` module.
object_crawler = ["sui_types", "serde_json"]

# Transactions feature enables the use of the `transactions` module. These are
# used in the CLI and tests and hide away PTBs for various Nexus operations.
transactions = ["sui_idents", "bincode"]

# Walrus client feature enables the use of the `walrus` module, providing
# integration with the Walrus decentralized blob storage system.
walrus = ["reqwest", "futures-util", "tokio", "serde_json", "thiserror"]

# Provides DAG-related utilities.
dag = ["petgraph"]

# Test utils feature enables the use of the `test_utils` module. Also adds
# tempfile, tokio-retry, sui_move_build, sui_package_management and
# testcontainers-modules as dependencies.
test_utils = [
    "types",
    "tempfile",
    "tokio-retry",
    "sui_move_build",
    "sui_package_management",
    "testcontainers-modules",
]

# Enable all features apart from `test_utils`.
full = [
    "tool_fqn",
    "crypto",
    "secret_core",
    "sui_types",
    "sui_idents",
    "types",
    "events",
    "object_crawler",
    "transactions",
    "walrus",
    "dag",
]


[dependencies]
anyhow.workspace = true
chrono.workspace = true
dirs = "6.0.0"
serde.workspace = true

# === Optional deps for features ===
[dependencies.base64]
workspace = true
optional = true

# === Crypto deps ===
[dependencies.aead]
version = "0.5"
optional = true

[dependencies.serde-big-array]
workspace = true
optional = true

[dependencies.serde_bytes]
version = "0.11"
optional = true

[dependencies.aes-gcm]
workspace = true
optional = true

[dependencies.aes-siv]
workspace = true
features = ["std"]
optional = true

[dependencies.bincode]
workspace = true
optional = true

[dependencies.chacha20poly1305]
version = "0.10"
features = ["rand_core", "std"]
optional = true

[dependencies.hkdf]
version = "0.12"
optional = true

[dependencies.hmac]
version = "0.12"
optional = true

[dependencies.hex]
version = "0.4"
optional = true

[dependencies.petgraph]
workspace = true
optional = true

[dependencies.rand]
workspace = true
optional = true

[dependencies.rand_core]
version = "0.6.4"
optional = true

[dependencies.sha2]
version = "0.10"
optional = true

[dependencies.subtle]
version = "2"
optional = true

[dependencies.x25519-dalek]
version = "2"
features = ["zeroize"]
optional = true

[dependencies.xeddsa]
version = "1.0.2"
default-features = false
features = ["xed25519"]
optional = true

[dependencies.zeroize]
workspace = true
features = ["zeroize_derive"]
optional = true

[dependencies.ciborium]
version = "0.2"
optional = true

# === Optional deps ===
[dependencies.futures-util]
version = "0.3"
optional = true

[dependencies.lazy-regex]
workspace = true
optional = true

[dependencies.regex]
workspace = true
optional = true

[dependencies.reqwest]
workspace = true
optional = true
features = ["json", "stream"]

[dependencies.serde_json]
workspace = true
optional = true

[dependencies.tempfile]
workspace = true
optional = true

[dependencies.thiserror]
workspace = true
optional = true

[dependencies.tokio]
workspace = true
features = ["io-util"]
optional = true

[dependencies.tokio-retry]
workspace = true
optional = true

# === Sui deps ===
[dependencies.sui_sdk]
git = "https://github.com/MystenLabs/sui"
tag = "mainnet-v1.45.3"
package = "sui-sdk"
optional = true

[dependencies.move_core_types]
git = "https://github.com/MystenLabs/sui"
tag = "mainnet-v1.45.3"
package = "move-core-types"
optional = true

[dependencies.sui_keys]
git = "https://github.com/MystenLabs/sui"
tag = "mainnet-v1.45.3"
package = "sui-keys"
optional = true

[dependencies.sui_config]
git = "https://github.com/MystenLabs/sui"
tag = "mainnet-v1.45.3"
package = "sui-config"
optional = true

[dependencies.shared_crypto]
git = "https://github.com/mystenlabs/sui"
tag = "mainnet-v1.45.3"
package = "shared-crypto"
optional = true

[dependencies.sui_move_build]
git = "https://github.com/MystenLabs/sui"
tag = "mainnet-v1.45.3"
package = "sui-move-build"
optional = true

[dependencies.sui_package_management]
git = "https://github.com/MystenLabs/sui"
tag = "mainnet-v1.45.3"
package = "sui-package-management"
optional = true

[dependencies.testcontainers-modules]
git = "https://github.com/Talus-Network/testcontainers-rs-modules-community"
# TODO: change this once merged.
branch = "feat/add-sui-support"
features = ["sui", "redis"]
optional = true

# === Dev deps ===
[dev-dependencies]
assert_matches = "1.5.0"
tokio = { workspace = true, features = ["full"] }
serde_json = { workspace = true }
mockito.workspace = true
tempfile = "3"

# === Build deps ===
[build-dependencies]
toml.workspace = true

[dependencies.blake3]
version = "1.3"
optional = true

[dependencies.lru]
version = "0.12"
optional = true
